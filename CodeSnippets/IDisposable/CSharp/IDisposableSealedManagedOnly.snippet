 <?xml version="1.0" encoding="utf-8"?>
<CodeSnippets
		xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
		<CodeSnippet Format="1.0.0">
				<Header>
					<Title>IDisposable - Sealed class (Managed resources only).</Title>
					<Author>Deleep Nair</Author>
					<Description>Based on the blog by Paul Ballard (http://blog.pluralsight.com/idisposable-for-dummies-1-why-what)</Description>
					<Shortcut>IDisposeSealedManaged</Shortcut>
				</Header>
				<Snippet>
					<References>
						<Reference>
							<Assembly>System.Data.dll</Assembly>
						</Reference>
					</References>
					<Imports>
						<Import>
							<Namespace>System.Data</Namespace>
						</Import>
					</Imports>
					<Declarations>
						<Object>
							<ID>ManagedGlobalResource</ID>
							<ToolTip>Global resource variable name</ToolTip>
							<Type>System.Object</Type>
							<Default>_managedResource</Default>
						</Object>
						<Object>
							<ID>DisposingObject</ID>
							<ToolTip>Global resource variable name</ToolTip>
							<Type>System.Object</Type>
							<Default>CurrentObject</Default>
						</Object>
					</Declarations>
					<Code Language="CSharp">
								<![CDATA[
				#region IDisposable Members

				// --------------------------------------------
				// NOTE: Implement IDisposable for the class
				// --------------------------------------------

				private bool _isDisposed = false;

				/// <summary>
				/// Method that will be called explicitly to dispose the resources in this object.
				/// </summary>
				/// <remarks>
				/// This code should be used as-is for the Dispose functionality.
				/// </remarks>
				public void Dispose() {
						if (this._isDisposed) {
								return;			
						}

						DisposeManagedResources();

						GC.SuppressFinalize(this);
						
						this._isDisposed = true;
				}
				
				/// <summary>
				/// Dispose all the managed resources here.
				/// </summary>
				private void DisposeManagedResources() {
			
						if ($ManagedGlobalResource$ != null) {
								$ManagedGlobalResource$.Dispose();
								$ManagedGlobalResource$ = null;
						}

				}
				
				/// <summary>
				/// This should be the first statement in all public members of this object.
				/// </summary>
				private void CheckIfDisposeAndRaiseException() {
				
						if (this._isDisposed) {
								throw new ObjectDisposedException(this.GetType().FullName);
						}            

				}

				#endregion

							]]>
						</Code>

				</Snippet>
				
		</CodeSnippet>
</CodeSnippets>